{"version":3,"sources":["components/LightBox.js","components/TiledGallery.js","components/ErrorBoundary.js","App.js","constants.js","reportWebVitals.js","index.js"],"names":["LightBox","closeLighBox","showPrev","currentImage","showNext","url","images","className","onClick","src","alt","style","position","top","left","fontSize","right","TiledGallery","galleryError","useState","displayLightbox","setDisplayLightbox","setCurrentImage","getCurrentImageIndex","currentImageId","id","findIndex","image","map","username","openLighbox","currentIndex","length","ErrorBoundary","props","state","error","errorInfo","this","setState","children","React","Component","App","setImages","setGalleryError","useEffect","fetch","URLSearchParams","api_key","limit","then","res","console","log","ok","Error","json","giphyData","data","catch","message","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAoCeA,EAlCE,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAClDC,EAAMF,EAAaG,OAAO,cAAcD,IAC9C,OACE,sBAAKE,UAAU,mBAAf,UACE,qBAAKA,UAAU,oBAAoBC,QAASP,IAC5C,sBAAKM,UAAU,mBAAf,UACE,qBAAKE,IAAKJ,EAAKK,IAAI,aACnB,cAAC,IAAD,CACEF,QAASN,EACTS,MAAO,CACLC,SAAU,WACVC,IAAK,MACLC,KAAM,KACNC,SAAU,UAGd,cAAC,IAAD,CACEP,QAASJ,EACTO,MAAO,CACLC,SAAU,WACVC,IAAK,MACLG,MAAO,KACPD,SAAU,UAGd,cAAC,IAAD,CACEP,QAASP,EACTU,MAAO,CAAEC,SAAU,WAAYC,IAAK,KAAMG,MAAO,eC2C5CC,EArEM,SAAC,GAA8B,IAA5BX,EAA2B,EAA3BA,OAAQY,EAAmB,EAAnBA,aAAmB,EACHC,oBAAS,GADN,mBAC1CC,EAD0C,KACzBC,EADyB,OAETF,qBAFS,mBAE1ChB,EAF0C,KAE5BmB,EAF4B,KAW3CC,EAAuB,WAC3B,IAAMC,EAAiBrB,EAAasB,GACpC,OAAOnB,EAAOoB,WAAU,SAACC,GAAD,OAAWA,EAAMF,KAAOD,MAsBlD,OACE,8BACGN,EACC,4BAAIA,IAEJ,qCACE,qBAAKX,UAAU,oBAAf,SACGD,EAAOsB,KAAI,SAACD,GACX,IAAMtB,EAAMsB,EAAMrB,OAAO,cAAcD,IACvC,OACE,qBAAKE,UAAU,wBAAf,SACE,qBACEE,IAAKJ,EACLK,IAAKiB,EAAME,SACXrB,QAAS,kBA9CP,SAACmB,GACnBN,GAAmB,GACnBC,EAAgBK,GA4CeG,CAAYH,OAJaA,EAAMF,SAUvDL,GACC,cAAC,EAAD,CACEnB,aAlDS,WACnBoB,GAAmB,IAkDTlB,aAAcA,EACdD,SAjCK,WACf,IAAM6B,EAAeR,IAGnBD,EAFmB,IAAjBS,EAEczB,EAAOA,EAAO0B,OAAS,GAEvB1B,EAAOyB,EAAe,KA4B9B3B,SA5CK,WACf,IAAM2B,EAAeR,IACjBQ,IAAiBzB,EAAO0B,OAAS,EAEnCV,EAAgBhB,EAAO,IAEvBgB,EAAgBhB,EAAOyB,EAAe,a,6BCK7BE,E,kDA3Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,MAAO,KAAMC,UAAW,MAFtB,E,8DAKDD,EAAOC,GAEvBC,KAAKC,SAAS,CACZH,MAAOA,EACPC,UAAWA,M,+BAKb,OAAIC,KAAKH,MAAMC,MAGX,8BACE,yDAKCE,KAAKJ,MAAMM,a,GAxBMC,IAAMC,W,OCuCnBC,MAnCf,WAAgB,IAAD,EACexB,mBAAS,IADxB,mBACNb,EADM,KACEsC,EADF,OAE2BzB,mBAAS,MAFpC,mBAEND,EAFM,KAEQ2B,EAFR,KAuBb,OApBAC,qBAAU,WACRC,MACE,0CACE,IAAIC,gBAAgB,CAClBC,QCbsB,mCDctBC,MAAO,MAGVC,MAAK,SAACC,GAEL,GADAC,QAAQC,IAAIF,IACPA,EAAIG,GACP,MAAM,IAAIC,MAAM,yBAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GAAD,OAAed,EAAUc,EAAUC,SACxCC,OAAM,SAACxB,GACNS,EAAgBT,EAAMyB,cAEzB,IAED,qBAAKtD,UAAU,MAAf,SACE,eAAC,IAAYuD,SAAb,CAAsBC,MAAO,CAAExD,UAAW,eAA1C,UACE,mDACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAcW,aAAcA,EAAcZ,OAAQA,YEtB7C0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d63c330c.chunk.js","sourcesContent":["import React from \"react\";\nimport { MdChevronLeft, MdChevronRight, MdClose } from \"react-icons/md\";\nconst LightBox = ({ closeLighBox, showPrev, currentImage, showNext }) => {\n  const url = currentImage.images[\"480w_still\"].url;\n  return (\n    <div className=\"lightbox-wrapper\">\n      <div className=\"lightbox-backdrop\" onClick={closeLighBox} />\n      <div className=\"lightbox-content\">\n        <img src={url} alt=\"images 1\" />\n        <MdChevronLeft\n          onClick={showPrev}\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"0%\",\n            fontSize: \"44px\",\n          }}\n        />\n        <MdChevronRight\n          onClick={showNext}\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            right: \"0%\",\n            fontSize: \"44px\",\n          }}\n        />\n        <MdClose\n          onClick={closeLighBox}\n          style={{ position: \"absolute\", top: \"0%\", right: \"0%\" }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LightBox;\n","import React, { useState } from \"react\";\nimport LightBox from \"./LightBox\";\n\nconst TiledGallery = ({ images, galleryError }) => {\n  const [displayLightbox, setDisplayLightbox] = useState(false);\n  const [currentImage, setCurrentImage] = useState();\n  const openLighbox = (image) => {\n    setDisplayLightbox(true);\n    setCurrentImage(image);\n  };\n  const closeLighBox = () => {\n    setDisplayLightbox(false);\n  };\n\n  const getCurrentImageIndex = () => {\n    const currentImageId = currentImage.id;\n    return images.findIndex((image) => image.id === currentImageId);\n  };\n\n  const showNext = () => {\n    const currentIndex = getCurrentImageIndex();\n    if (currentIndex === images.length - 1) {\n      // that is if last index then show 1st image\n      setCurrentImage(images[0]);\n    } else {\n      setCurrentImage(images[currentIndex + 1]);\n    }\n  };\n\n  const showPrev = () => {\n    const currentIndex = getCurrentImageIndex();\n    if (currentIndex === 0) {\n      // that is if first index then show last image\n      setCurrentImage(images[images.length - 1]);\n    } else {\n      setCurrentImage(images[currentIndex - 1]);\n    }\n  };\n  return (\n    <div>\n      {galleryError ? (\n        <p>{galleryError}</p>\n      ) : (\n        <>\n          <div className=\"gallery-container\">\n            {images.map((image) => {\n              const url = image.images[\"480w_still\"].url;\n              return (\n                <div className=\"gallery-image-wrapper\" key={image.id}>\n                  <img\n                    src={url}\n                    alt={image.username}\n                    onClick={() => openLighbox(image)}\n                  />\n                </div>\n              );\n            })}\n          </div>\n          {displayLightbox && (\n            <LightBox\n              closeLighBox={closeLighBox}\n              currentImage={currentImage}\n              showPrev={showPrev}\n              showNext={showNext}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TiledGallery;\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import \"./App.scss\";\nimport { useState, useEffect } from \"react\";\nimport { GIPHY_SECRET_KEY } from \"./constants.js\";\nimport TiledGallery from \"./components/TiledGallery\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport { IconContext } from \"react-icons\";\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [galleryError, setGalleryError] = useState(null);\n  useEffect(() => {\n    fetch(\n      \"https://api.giphy.com/v1/gifs/trending?\" +\n        new URLSearchParams({\n          api_key: GIPHY_SECRET_KEY,\n          limit: 25,\n        })\n    )\n      .then((res) => {\n        console.log(res);\n        if (!res.ok) {\n          throw new Error(\"Something went wrong!\");\n        }\n        return res.json();\n      })\n      .then((giphyData) => setImages(giphyData.data))\n      .catch((error) => {\n        setGalleryError(error.message);\n      });\n  }, []);\n  return (\n    <div className=\"App\">\n      <IconContext.Provider value={{ className: \"react-icons\" }}>\n        <h2>Giphy Gallery App</h2>\n        <ErrorBoundary>\n          <TiledGallery galleryError={galleryError} images={images} />\n        </ErrorBoundary>\n      </IconContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","export const GIPHY_SECRET_KEY = \"Th5Bly2ozUREaMpGZSFNTqs2VDV0QZx9\";\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}